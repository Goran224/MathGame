// <auto-generated />
using System;
using MathGame_Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathGame_Domain.Migrations
{
    [DbContext(typeof(MathGameDbContext))]
    [Migration("20240311212055_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MathGame_Domain.EntityModels.GameExpression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Answer")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "answer");

                    b.Property<int>("AnswerStatus")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "answerStatus");

                    b.Property<string>("AnsweredFromPlayer")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "answeredFromPlayer");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "gameSessionId");

                    b.Property<string>("MathExpression")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "mathExpression");

                    b.Property<double>("Result")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "result");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("GameExpressions");
                });

            modelBuilder.Entity("MathGame_Domain.EntityModels.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Winner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameSessions");

                    b.HasAnnotation("Relational:JsonPropertyName", "gameSession");
                });

            modelBuilder.Entity("MathGame_Domain.EntityModels.LoggedPlayerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoggedPlayersInfo");
                });

            modelBuilder.Entity("MathGame_Domain.EntityModels.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameSessionId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MathGame_Domain.EntityModels.GameExpression", b =>
                {
                    b.HasOne("MathGame_Domain.EntityModels.GameSession", "GameSession")
                        .WithMany("GameExpressions")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("MathGame_Domain.EntityModels.Player", b =>
                {
                    b.HasOne("MathGame_Domain.EntityModels.GameSession", "GameSession")
                        .WithMany("Players")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("MathGame_Domain.EntityModels.GameSession", b =>
                {
                    b.Navigation("GameExpressions");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
